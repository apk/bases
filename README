This is an exercise of doing strange and new methods of encoding some binary as ascii.

carray - produce a C array body (just the ... of 'char name [] = { ... };}'.

e64 - encode byte stream in base64. When using multiple inputs output isn't well formed.

d64 - decode base64 code into byte stream.

hex2bin - take hex characters and convert to byte stream. Requires only hex character in pairs and white space in input. With -r it ignores other characters.

bin2hex - take byte stream and output as (pure) hex dump.

inv94 - replace printable ascii chars by the characater the same distance
 from the other end of the printable range, so ! becomes ~ and vice versa.

rot13 - you know that.

Common options:

  -             use stdin as input
  -C dir        change working directory to given dir
  -f filename   use given filename as input
  -o filename   write output into that file for the following inputs
                (up to next -o); file is created when option is processed
  -c str        use the argument's content as input
  filename      use given filename as input

If no input is mentioned an implicit - is added to the arguments;
thus a no-argument invocation works as pipe.
